# Sync Service Dockerfile
FROM node:18-alpine AS base

# Install bash for entrypoint scripts
RUN apk add --no-cache bash

# Install dependencies only when needed
FROM base AS deps
RUN apk add --no-cache libc6-compat python3 make g++
WORKDIR /app

# Install dependencies based on the preferred package manager
COPY package*.json ./
RUN npm ci

# Production image, copy all the files and run the sync service
FROM base AS runner
WORKDIR /app

ENV NODE_ENV=production

RUN addgroup --system --gid 1001 mailsync
RUN adduser --system --uid 1001 mailsync

# Copy dependencies
COPY --from=deps /app/node_modules ./node_modules

# Copy source code needed for sync service
COPY src/services ./src/services
COPY src/lib ./src/lib
COPY prisma ./prisma
COPY package.json ./

# Copy scripts for migrations
COPY scripts ./scripts

# Copy entrypoint script directly
COPY scripts/docker-entrypoint-sync.sh /usr/local/bin/docker-entrypoint-sync.sh
RUN chmod +x /usr/local/bin/docker-entrypoint-sync.sh

# Create data directory and ensure proper permissions
RUN mkdir -p /app/data /app/logs /app/src/generated
RUN chown -R mailsync:mailsync /app/data /app/logs /app/src

# Generate Prisma client as mailsync user
USER mailsync
RUN npx prisma generate

# Use entrypoint for setup
ENTRYPOINT ["/usr/local/bin/docker-entrypoint-sync.sh"]
CMD ["node", "src/services/start-background-sync.js"] 